# -*- coding: utf-8 -*-
"""week7_RubinaChhahari.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1G5JHRD7p7QTm-RO8UBzuRqGXBwDcq8Lw
"""



"""Data introduction: The data set obtained from National Institute of Diabetes and Digestive and Kidney Diseases, objectifies to predict the diabities on patients based on certain diagnostic measurements. The selection of these examples from a wider database was subject to a number of restrictions. Specifically, all of the patients here are Pima Indian women who are at least 21 years old.2. The data set contained in the (.csv) file There is only one target dependent variable (outcome) and a number of independent variables (medical predictor variables).

Data Overview
"""

import pandas as pd
import numpy as np

# Loading the dataset
dataset_path = '/content/drive/MyDrive/AI/Workshop7/diabetes (1).csv'
data = pd.read_csv(dataset_path)

from google.colab import drive
drive.mount('/content/drive')

data.head()

data.columns

data.shape

data.dtypes

data.describe

data.duplicated()

data.isnull()

data.isna().sum

scaler = StandardScaler()
x_scaled = scaler.fit_transform(x)

x_train, x_test, y_train, y_test = train_test_split(x_scaled, y, test_size=0.2, random_state= 42)

model = LinearRegression()
model.fit(x_train, y_train)

y_pred = model.predict(x_test)

mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print(f'\nMean Squared Error: {mse}')
print(f'R - Square: {r2}')

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

# Example DataFrame for testing
# df = pd.read_csv('your_dataset.csv')  # Load your dataset here
# Example dummy data for 'Glucose'
df = pd.DataFrame({'Glucose': [85, 90, 120, 140, 160, 75, 95, 110, 130]})

# Plotting the histogram
plt.figure(figsize=(8, 6))
sns.histplot(df['Glucose'], kde=True, bins=20, color='skyblue')
plt.title('Distribution of Glucose')
plt.xlabel('Glucose')
plt.ylabel('Frequency')
plt.show()

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

# Sample DataFrame for demonstration
df = pd.DataFrame({
    'Outcome': [0, 1, 0, 1, 0, 1],
    'Age': [25, 45, 30, 50, 28, 60]
})

# Ensure 'Outcome' is categorical
df['Outcome'] = df['Outcome'].astype('category')

plt.figure(figsize=(8, 6))
sns.boxplot(x='Outcome', y='Age', data=df)
plt.title('Age vs Outcome')
plt.xlabel('Diabetic (1) / Non-diabetic (0)')
plt.ylabel('Age')
plt.show()

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

# Sample dataset
df = pd.DataFrame({
    'Outcome': [0, 1, 0, 1, 0, 1],
    'Pregnancies': [2, 4, 1, 5, 3, 6]
})

plt.figure(figsize=(8, 6))
sns.barplot(x='Outcome', y='Pregnancies', data=df, palette='Set2')
plt.title('Average Number of Pregnancies by Outcome')
plt.xlabel('Diabetic (1) / Non-diabetic (0)')
plt.ylabel('Average Pregnancies')
plt.show()

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

# Sample DataFrame
df = pd.DataFrame({
    'Glucose': [100, 150, 120, 140, 130, 170],
    'BMI': [30, 35, 28, 33, 31, 36],
    'Outcome': [0, 1, 0, 1, 0, 1]
})

# Scatter plot
plt.figure(figsize=(8, 6))
sns.scatterplot(x='Glucose', y='BMI', hue='Outcome', data=df, palette='coolwarm')
plt.title('Glucose vs BMI by Outcome')
plt.xlabel('Glucose')
plt.ylabel('BMI')
plt.show()

# Pie chart for Outcome distribution
outcome_counts = df['Outcome'].value_counts()
plt.figure(figsize=(6,6))
outcome_counts.plot.pie(autopct='%1.1f%%', startangle=90, colors=['lightcoral', 'lightskyblue'])
plt.title('Proportion of Diabetic vs Non-diabetic Patients')
plt.ylabel('')
plt.show()

